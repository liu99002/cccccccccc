// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[9..11],a=r1,b=r2,c=r3,d=r4,e=r5,f=r6,g=r7,h=r8);
    RAM512(in=in,load=r1,address=address[0..8],out=mux1);
    RAM512(in=in,load=r2,address=address[0..8],out=mux2);
    RAM512(in=in,load=r3,address=address[0..8],out=mux3);
    RAM512(in=in,load=r4,address=address[0..8],out=mux4);
    RAM512(in=in,load=r5,address=address[0..8],out=mux5);
    RAM512(in=in,load=r6,address=address[0..8],out=mux6);
    RAM512(in=in,load=r7,address=address[0..8],out=mux7);
    RAM512(in=in,load=r8,address=address[0..8],out=mux8);
    Mux8Way16(a=mux1,b=mux2,c=mux3,d=mux4,e=mux5,f=mux6,g=mux7,h=mux8,sel=address[9..11],out=out);
}